version: 2.1
orbs:
  helm: circleci/helm@1.2.0 -> for creating the helm package
  aws-cli: circleci/aws-cli@1.4.0 -> for pushing package to s3

chart_version:
  docker:
    - image: mikefarah/yq:3.3.4
  working_directory: /tmp/ci
  steps:
    - checkout
    - run: yq r charts/atlantis/Chart.yaml version > /tmp/ci/chart-version.txt
    - run: yq r charts/atlantis/Chart.yaml name > /tmp/ci/chart-name.txt
    - persist_to_workspace:
        root: /tmp/ci
        paths:
          - chart-version.txt
          - chart-name.txt
chart_to_s3:
  docker:
    - image: cimg/base:2020.01
  steps:
    - attach_workspace:
        at: /tmp/ci
    - aws-cli/setup:
        aws-access-key-id: HELM_S3_AWS_ACCESS_KEY_ID
        aws-secret-access-key: HELM_S3_AWS_SECRET_ACCESS_KEY
        aws-region: HELM_S3_AWS_REGION
    - run: |
        CHARTVERSION=`cat /tmp/ci/chart-version.txt`
        CHARTNAME=`cat /tmp/ci/chart-name.txt`
        if aws s3api head-object --bucket procore-helm-charts --key ${CHARTNAME}-${CHARTVERSION}.tgz; then
          echo "Helm package is up to date."
          circleci-agent step halt
        else
          echo "Helm package will be updated."
        fi
    - checkout
    - helm/install-helm-client:
        version: v3.5.2
        stable-repo-url: https://charts.helm.sh/stable
    - run: helm package charts/atlantis/Chart.yaml
    - run: |
        aws s3 cp atlantis-*.tgz s3://procore-helm-charts/
workflows:
  version: 2.1
  build:
    jobs:
      - chart_version
      - chart_to_s3:
          context: helm-package-release
          requires:
            - chart_version